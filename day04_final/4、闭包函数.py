# Author: ray.zhang


#必须掌握：作用域关系，在函数定义时就已经固定，于调用位置无关。
#就是找作用域的关系，要回到定义的时候找。
x =1
def f1():
    def f2():
        print(x)
    return f2
func=f1()           # return的作用是打破层级限制。
x = 100000          #当调用f1()后直接返回了f2函数名，在当调用func()实际调用f2()时 找全局空间的x之前就已经被改了。
func()              #所以答案是100000



def f1():
    def f2():            #找的x是定义函数的时候找的，如果当前没有，就找全局。
        print(x)         #所以找的是全局的x 答案为1000
    return f2

def foo(func):           #  作用域关系，在函数定义时就已经固定，于调用位置无关。
    x = 3000
    func()
x =1000
foo(f1())


#闭包函数：定义在函数内部的函数，
# 包含对外部作用域名字的引用，
# 而不是对全局作用域名字的引用，
# 那么该内部函数就称为闭包函数。

x =1
def f1():
    x = 10
    def f2():
        print(x)         #这里x引用的作用域是 10 而不是全局 1，
    print(locals())
    return f2            #这里的f2就是闭包函数。

func=f1()
func()