# Author: ray.zhang

#函数参数

# 形参 :定义函数时括号内的参数。就是变量名。
# 实参 :调用函数时括号内的参数。就是变量值。在调用阶段，实参才会绑定到形参。在调用结束后解除绑定。

def foo(x,y):      #形参 x=3,y=4
    print(x,y)

foo(3,4)           #实参


#参数的分类
#位置参数：按照从左到右的顺序依次定义的参数，分两种：
# 位置形参: 必选参数，多一个不行，少一个参数也不行。比如：foo('eray',1,2)这样多参数调用会报错。

# 位置实参：与形参按照位置一一对应。
def foo(x,y):
    print(x,y)

foo('erav',2)
foo(2,'erav')      #实参位置变了，对应x,y的值也跟着变了，这就是一一对应的关系。如果位置变了，需求对应关系值不变，就需要下面的关键字参数了。

#关键字实参：指的是按照key-value的形式，指名道姓的给形参如name传值
#以下是调用位置实参和关键字实参混用的例子
#注意：
# 位置实参必须在关键字实参前面。  --语法规定。
# 不能对同一个形参传多次值。
def var(name,age,sex):
    print(name,age,sex)

var('erav',sex='male',age=28)       #注意：位置实参必须在关键字实参前面。
#var('erav',sex='male',age=28,sex=29)  #注意：不能对同一个形参传多次值。这种方式是错误的。

#默认形参： 在定义阶段，就已经为形参赋值，意味着在调用阶段可以不用传值，也可以传。
# 注意：
# 默认参数必须放在位置参数之后  ----语法规定
# 默认参数只在定义阶段赋值一次，而且仅一次，
# 默认参数的值应该定义成不可变类型。
b = 100
def res(x,y=b):         # y 相当于定义时候的默认值，优先级低。
    print(x,y)
b = 200                  #重新定义b的值，但是函数调用的时候y的值依旧是100.
print(b)
res(3)
res(3,'erav')         #也可以给对应的默认形参传值，优先级高。





